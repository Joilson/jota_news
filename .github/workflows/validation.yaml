name: CI - Validation

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test-application:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: mysql://root:root@127.0.0.1:3306/jota_news
      DJANGO_DB_ENGINE: django.db.backends.mysql
      DJANGO_DB_NAME: jota_news
      DJANGO_DB_USER: root
      DJANGO_DB_PASSWORD: root
      DJANGO_DB_HOST: 127.0.0.1
      DJANGO_DB_PORT: 3306
      FILE_STORAGE_ENDPOINT_URL: http://127.0.0.1:9000

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: jota_news
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root --password=root"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Iniciar MinIO
        run: |
          docker run -d -p 9000:9000 -p 9001:9001 \
          -e "MINIO_ROOT_USER=admin" \
          -e "MINIO_ROOT_PASSWORD=admin123" \
          --name minio \
          minio/minio server /data --console-address ":9001"

      - name: Aguardar MinIO iniciar
        run: |
          for i in {1..10}; do
            if curl -s http://localhost:9000/minio/health/live; then
              echo "MinIO está pronto!"
              exit 0
            fi
            echo "Aguardando MinIO iniciar..."
            sleep 3
          done
          echo "Erro: MinIO não iniciou a tempo" >&2
          exit 1

      - name: Testar conexão com MinIO
        run: curl -s http://localhost:9000/minio/health/live

      - name: Debug MinIO Container
        run: docker logs minio

      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Configurar bucket no MinIO
        run: |
          curl -O https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          sudo mv mc /usr/local/bin/

          mc alias set local http://127.0.0.1:9000 admin admin123
          mc mb local/news-images || true
          mc anonymous set public local/news-images

      - name: Instalar dependências
        run: |
          pip install --upgrade pip
          pip install -r .docker/web/requirements.txt

      - name: Configurar banco de dados
        run: |
          python manage.py migrate

      - name: Rodar testes API de users
        run: |
          python manage.py test users.tests.api

      - name: Rodar testes API de news
        run: |
          python manage.py test news.tests.api

      - name: Rodar Pylint em users
        run: |
          pylint users/ --disable=C0114,C0115,C0116,R0903

      - name: Rodar Pylint em news
        run: |
          pylint news/ --disable=C0114,C0115,C0116,R0903
